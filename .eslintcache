[{"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\App.js":"1","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\reportWebVitals.js":"2","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\header\\index.js":"3","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\home\\index.js":"4","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\index.js":"5","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\routes.js":"6","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\users\\edit\\index.js":"7","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\notes\\index\\index.js":"8","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\auth\\register\\index.js":"9","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\register_form\\index.js":"10","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\services\\api.js":"11","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\auth\\login\\index.js":"12","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\login_form\\index.js":"13","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\services\\users.js":"14","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\private_router\\index.js":"15","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\header_logged\\index.js":"16","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\notes\\index.js":"17","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\notes\\list\\index.js":"18"},{"size":238,"mtime":1610910673044,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610675231192,"results":"21","hashOfConfig":"20"},{"size":1321,"mtime":1610911969853,"results":"22","hashOfConfig":"20"},{"size":1361,"mtime":1610912113331,"results":"23","hashOfConfig":"20"},{"size":500,"mtime":1610675231192,"results":"24","hashOfConfig":"20"},{"size":840,"mtime":1611012797329,"results":"25","hashOfConfig":"20"},{"size":160,"mtime":1610911381544,"results":"26","hashOfConfig":"20"},{"size":436,"mtime":1611281918291,"results":"27","hashOfConfig":"20"},{"size":1387,"mtime":1610915226295,"results":"28","hashOfConfig":"20"},{"size":2973,"mtime":1610924878216,"results":"29","hashOfConfig":"20"},{"size":110,"mtime":1610918524067,"results":"30","hashOfConfig":"20"},{"size":1289,"mtime":1610924458348,"results":"31","hashOfConfig":"20"},{"size":2669,"mtime":1610926479500,"results":"32","hashOfConfig":"20"},{"size":486,"mtime":1611181482885,"results":"33","hashOfConfig":"20"},{"size":348,"mtime":1611012680897,"results":"34","hashOfConfig":"20"},{"size":2755,"mtime":1611282063346,"results":"35","hashOfConfig":"20"},{"size":1705,"mtime":1611284394494,"results":"36","hashOfConfig":"20"},{"size":1225,"mtime":1611283982337,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"cw7d5g",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\App.js",["83","84"],"import React, { Fragment } from 'react';\r\nimport { Notification, Section } from 'rbx';\r\nimport \"./App.scss\";\r\nimport Routes from './routes';\r\n \r\nconst App = () => (\r\n  <Fragment>\r\n      <Routes />\r\n  </Fragment>\r\n)\r\n \r\nexport default App;","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\reportWebVitals.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\header\\index.js",["85"],"import { Navbar, Container, Column } from 'rbx';\r\nimport logoImage from '../../assets/images/notes.gif';\r\nimport '../../styles/header.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar>\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link>\r\n          <img src={logoImage} />\r\n          </Link>\r\n          <Navbar.Burger\r\n            className=\"navbar-burger burger\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbar-menu\">\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </Navbar.Burger>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Menu id=\"navbar-menu\">\r\n          <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\r\n          <Column.Group>\r\n              <Column>\r\n                <Link to=\"/register\" className=\"button is-white has-text-custom-color\">Registre-se</Link>\r\n              </Column>\r\n              <Column>\r\n                <Link to=\"/login\" className=\"button is-outlined is-custom-color\">Login</Link>\r\n              </Column>\r\n            </Column.Group>\r\n          </Navbar.Segment>\r\n        </Navbar.Menu>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header; ",["86","87"],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\home\\index.js",["88"],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\index.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\routes.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\users\\edit\\index.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\notes\\index\\index.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\auth\\register\\index.js",["89"],"import React, { Fragment } from 'react';\r\nimport Header from '../../../components/header';\r\nimport { Column, Section, Title, Container, Card } from 'rbx';\r\nimport LogoImage from '../../../assets/images/notes.gif';\r\nimport '../../../styles/auth.scss';\r\nimport RegisterForm from '../../../components/auth/register_form';\r\n\r\nconst RegisterScreen = () => (\r\n  <Fragment>\r\n    <Header/>\r\n      <Section size=\"medium\" className=\"auth\">\r\n        <Container>\r\n          <Column.Group centered>\r\n            <Column size={3}>\r\n              <Card>\r\n                <Card.Content>\r\n                  <Section>\r\n                    <Column.Group centered>\r\n                      <Column size={12}>\r\n                        <img src={LogoImage}/>\r\n                      </Column>\r\n                    </Column.Group>\r\n\r\n                    <Column.Group>\r\n                      <Column size={12}>\r\n                        <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                         Suas notas na nuvem\r\n                        </Title>\r\n                      </Column>\r\n                    </Column.Group>\r\n                    <RegisterForm />\r\n                  </Section>\r\n                </Card.Content>\r\n              </Card>\r\n            </Column>\r\n          </Column.Group>\r\n        </Container>\r\n      </Section>\r\n  </Fragment>\r\n);\r\n\r\nexport default RegisterScreen;","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\register_form\\index.js",["90","91","92"],"import React, { Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UsersService from '../../../services/users';\r\n\r\n\r\nfunction RegisterForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const HandleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const user = await UsersService.register({name: name, email: email, password: password});\r\n      setRedirectToLogin(true);\r\n    } catch (error) {\r\n        setError(true);\r\n    }\r\n  }\r\n\r\n  if(redirectToLogin)\r\n    return <Redirect to={{pathname: \"/login\"}} />\r\n\r\n  return (\r\n    <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={HandleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Nome:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"name\"\r\n                    required\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Senha:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a className=\"button is-white has-text-custom-color\"\r\n                      onClick={e => setRedirectToLogin(true)}\r\n                      >Fazer Login</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-color\" outlined>Registrar</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou senha inválida</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RegisterForm;",["93","94"],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\services\\api.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\screens\\auth\\login\\index.js",["95"],"import React, { Fragment } from 'react';\r\nimport Header from '../../../components/header';\r\nimport { Column, Section, Title, Container, Card } from 'rbx';\r\nimport LogoImage from '../../../assets/images/notes.gif';\r\nimport '../../../styles/auth.scss';\r\nimport LoginForm from '../../../components/auth/login_form';\r\n\r\n\r\nconst LoginScreen = () => (\r\n  <Fragment>\r\n    <Header/>\r\n    <Section size=\"medium\" className=\"auth\">\r\n      <Container>\r\n        <Column.Group centered>\r\n          <Column size={3}>\r\n            <Card>\r\n              <Card.Content>\r\n              <Section>\r\n                <Column.Group centered>\r\n                  <Column size={12}>\r\n                    <img src={LogoImage}/>\r\n                  </Column>\r\n                </Column.Group>\r\n\r\n                <Column.Group>\r\n                  <Column size={12}>\r\n                    <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                    Suas notas na nuvem\r\n                    </Title>\r\n                  </Column>\r\n                </Column.Group>\r\n                <LoginForm />\r\n              </Section>\r\n              </Card.Content>\r\n            </Card>\r\n          </Column>\r\n        </Column.Group>\r\n      </Container>\r\n    </Section>\r\n  </Fragment>\r\n);\r\n\r\nexport default LoginScreen;","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\login_form\\index.js",["96","97","98"],"import React, { Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport UsersService from '../../../services/users';\r\n\r\nfunction LoginForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [redirectToRegister, setRedirectToRegister] = useState(false);\r\n  const [redirectToNotes, setRedirectToNotes] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const HandleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const user = await UsersService.login({email: email, password: password});\r\n      setRedirectToNotes(true);\r\n    } catch (error) {\r\n        setError(true);\r\n    }\r\n  }\r\n\r\n  if(redirectToRegister)\r\n    return <Redirect to={{pathname: \"/register\"}}/>\r\n  else if(redirectToNotes)\r\n    return <Redirect to={{pathname: \"/notes\"}}/>\r\n\r\n  return (\r\n    <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={HandleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Senha:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a className=\"button is-white has-text-custom-color\"\r\n                      onClick={e => setRedirectToRegister(true)}\r\n                      >Registrar</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-color\" outlined>Entrar</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou senha inválida</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\services\\users.js",[],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\auth\\private_router\\index.js",["99"],"import { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst privateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={props => (\r\n    localStorage.getItem('user')\r\n    ? <Component {...props} />\r\n    : <Redirect to={{ pathname: '/login' }} />\r\n  )}/>\r\n)\r\n\r\nexport default privateRoute;","C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\header_logged\\index.js",["100","101","102","103"],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\notes\\index.js",["104","105"],"C:\\Users\\Alan\\OneDrive\\Área de Trabalho\\evernote-clone\\evernote-react\\src\\components\\notes\\list\\index.js",["106","107"],{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":22},{"ruleId":"108","severity":1,"message":"112","line":2,"column":24,"nodeType":"110","messageId":"111","endLine":2,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":12,"column":11,"nodeType":"115","endLine":12,"endColumn":34},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"113","severity":1,"message":"114","line":27,"column":12,"nodeType":"115","endLine":27,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":20,"column":25,"nodeType":"115","endLine":20,"endColumn":47},{"ruleId":"108","severity":1,"message":"112","line":2,"column":49,"nodeType":"110","messageId":"111","endLine":2,"endColumn":56},{"ruleId":"108","severity":1,"message":"120","line":17,"column":13,"nodeType":"110","messageId":"111","endLine":17,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":72,"column":23,"nodeType":"115","endLine":74,"endColumn":24},{"ruleId":"116","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"113","severity":1,"message":"114","line":21,"column":21,"nodeType":"115","endLine":21,"endColumn":43},{"ruleId":"108","severity":1,"message":"112","line":2,"column":49,"nodeType":"110","messageId":"111","endLine":2,"endColumn":56},{"ruleId":"108","severity":1,"message":"120","line":16,"column":13,"nodeType":"110","messageId":"111","endLine":16,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":61,"column":23,"nodeType":"115","endLine":63,"endColumn":24},{"ruleId":"108","severity":1,"message":"125","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"126","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":19,"column":22,"nodeType":"129","messageId":"130","endLine":19,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":28,"column":15,"nodeType":"115","endLine":28,"endColumn":38},{"ruleId":"121","severity":1,"message":"131","line":70,"column":21,"nodeType":"115","endLine":70,"endColumn":57},{"ruleId":"108","severity":1,"message":"132","line":4,"column":18,"nodeType":"110","messageId":"111","endLine":4,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":22,"column":23,"nodeType":"129","messageId":"130","endLine":22,"endColumn":25},{"ruleId":"108","severity":1,"message":"132","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":18,"column":88,"nodeType":"129","messageId":"130","endLine":18,"endColumn":90},"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Section' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["133"],["134"],"'Component' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]